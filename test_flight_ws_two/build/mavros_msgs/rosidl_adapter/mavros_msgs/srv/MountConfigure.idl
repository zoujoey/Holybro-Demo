// generated from rosidl_adapter/resource/srv.idl.em
// with input from mavros_msgs/srv/MountConfigure.srv
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module mavros_msgs {
  module srv {
    module MountConfigure_Request_Constants {
      const uint8 MODE_RETRACT = 0;
      const uint8 MODE_NEUTRAL = 1;
      const uint8 MODE_MAVLINK_TARGETING = 2;
      const uint8 MODE_RC_TARGETING = 3;
      const uint8 MODE_GPS_POINT = 4;
      const uint8 INPUT_ANGLE_BODY_FRAME = 0;
      const uint8 INPUT_ANGULAR_RATE = 1;
      const uint8 INPUT_ANGLE_ABSOLUTE_FRAME = 2;
    };
    @verbatim (language="comment", text=
      " MAVLink message: DO_MOUNT_CONTROL" "\n"
      " https://mavlink.io/en/messages/common.html#MAV_CMD_DO_MOUNT_CONFIGURE")
    struct MountConfigure_Request {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        " See enum MAV_MOUNT_MODE.")
      uint8 mode;

      @verbatim (language="comment", text=
        " stabilize roll? (1 = yes, 0 = no)")
      boolean stabilize_roll;

      @verbatim (language="comment", text=
        " stabilize pitch? (1 = yes, 0 = no)")
      boolean stabilize_pitch;

      @verbatim (language="comment", text=
        " stabilize yaw? (1 = yes, 0 = no)")
      boolean stabilize_yaw;

      @verbatim (language="comment", text=
        " roll input (See enum MOUNT_INPUT)")
      uint8 roll_input;

      @verbatim (language="comment", text=
        " pitch input (See enum MOUNT_INPUT)")
      uint8 pitch_input;

      @verbatim (language="comment", text=
        " yaw input (See enum MOUNT_INPUT)")
      uint8 yaw_input;
    };
    struct MountConfigure_Response {
      boolean success;

      @verbatim (language="comment", text=
        " raw result returned by COMMAND_ACK")
      uint8 result;
    };
  };
};
