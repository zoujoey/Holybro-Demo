// generated from rosidl_adapter/resource/msg.idl.em
// with input from mavros_msgs/msg/GlobalPositionTarget.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module mavros_msgs {
  module msg {
    module GlobalPositionTarget_Constants {
      const uint8 FRAME_GLOBAL_INT = 5;
      const uint8 FRAME_GLOBAL_REL_ALT = 6;
      const uint8 FRAME_GLOBAL_TERRAIN_ALT = 11;
      const uint16 IGNORE_LATITUDE = 1;
      const uint16 IGNORE_LONGITUDE = 2;
      const uint16 IGNORE_ALTITUDE = 4;
      const uint16 IGNORE_VX = 8;
      const uint16 IGNORE_VY = 16;
      const uint16 IGNORE_VZ = 32;
      const uint16 IGNORE_AFX = 64;
      const uint16 IGNORE_AFY = 128;
      const uint16 IGNORE_AFZ = 256;
      const uint16 FORCE = 512;
      const uint16 IGNORE_YAW = 1024;
      const uint16 IGNORE_YAW_RATE = 2048;
    };
    @verbatim (language="comment", text=
      " Message for SET_POSITION_TARGET_GLOBAL_INT" "\n"
      "" "\n"
      " https://mavlink.io/en/messages/common.html#SET_POSITION_TARGET_GLOBAL_INT" "\n"
      " Some complex system requires all feautures that mavlink" "\n"
      " message provide. See issue #402, #415.")
    struct GlobalPositionTarget {
      std_msgs::msg::Header header;

      uint8 coordinate_frame;

      uint16 type_mask;

      double latitude;

      double longitude;

      @verbatim (language="comment", text=
        " in meters, AMSL or above terrain")
      float altitude;

      geometry_msgs::msg::Vector3 velocity;

      geometry_msgs::msg::Vector3 acceleration_or_force;

      float yaw;

      float yaw_rate;
    };
  };
};
