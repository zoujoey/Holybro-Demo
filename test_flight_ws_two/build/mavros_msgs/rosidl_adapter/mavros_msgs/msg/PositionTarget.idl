// generated from rosidl_adapter/resource/msg.idl.em
// with input from mavros_msgs/msg/PositionTarget.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module mavros_msgs {
  module msg {
    module PositionTarget_Constants {
      const uint8 FRAME_LOCAL_NED = 1;
      const uint8 FRAME_LOCAL_OFFSET_NED = 7;
      const uint8 FRAME_BODY_NED = 8;
      const uint8 FRAME_BODY_OFFSET_NED = 9;
      const uint16 IGNORE_PX = 1;
      const uint16 IGNORE_PY = 2;
      const uint16 IGNORE_PZ = 4;
      const uint16 IGNORE_VX = 8;
      const uint16 IGNORE_VY = 16;
      const uint16 IGNORE_VZ = 32;
      const uint16 IGNORE_AFX = 64;
      const uint16 IGNORE_AFY = 128;
      const uint16 IGNORE_AFZ = 256;
      const uint16 FORCE = 512;
      const uint16 IGNORE_YAW = 1024;
      const uint16 IGNORE_YAW_RATE = 2048;
    };
    @verbatim (language="comment", text=
      " Message for SET_POSITION_TARGET_LOCAL_NED" "\n"
      "" "\n"
      " Some complex system requires all feautures that mavlink" "\n"
      " message provide. See issue #402.")
    struct PositionTarget {
      std_msgs::msg::Header header;

      uint8 coordinate_frame;

      uint16 type_mask;

      geometry_msgs::msg::Point position;

      geometry_msgs::msg::Vector3 velocity;

      geometry_msgs::msg::Vector3 acceleration_or_force;

      float yaw;

      float yaw_rate;
    };
  };
};
