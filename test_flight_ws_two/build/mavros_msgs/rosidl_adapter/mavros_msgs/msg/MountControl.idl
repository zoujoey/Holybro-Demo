// generated from rosidl_adapter/resource/msg.idl.em
// with input from mavros_msgs/msg/MountControl.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module mavros_msgs {
  module msg {
    module MountControl_Constants {
      const uint8 MAV_MOUNT_MODE_RETRACT = 0;
      const uint8 MAV_MOUNT_MODE_NEUTRAL = 1;
      const uint8 MAV_MOUNT_MODE_MAVLINK_TARGETING = 2;
      const uint8 MAV_MOUNT_MODE_RC_TARGETING = 3;
      const uint8 MAV_MOUNT_MODE_GPS_POINT = 4;
    };
    @verbatim (language="comment", text=
      " MAVLink message: DO_MOUNT_CONTROL" "\n"
      " https://mavlink.io/en/messages/common.html#MAV_CMD_DO_MOUNT_CONTROL")
    struct MountControl {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        " See enum MAV_MOUNT_MODE.")
      uint8 mode;

      @verbatim (language="comment", text=
        " pitch degrees or degrees/second depending on mount mode.")
      float pitch;

      @verbatim (language="comment", text=
        " roll degrees or degrees/second depending on mount mode.")
      float roll;

      @verbatim (language="comment", text=
        " yaw degrees or degrees/second depending on mount mode.")
      float yaw;

      @verbatim (language="comment", text=
        " altitude depending on mount mode.")
      float altitude;

      @verbatim (language="comment", text=
        " latitude in degrees * 1E7, set if appropriate mount mode.")
      float latitude;

      @verbatim (language="comment", text=
        " longitude in degrees * 1E7, set if appropriate mount mode.")
      float longitude;
    };
  };
};
